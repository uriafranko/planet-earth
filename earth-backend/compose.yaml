services:
  postgres:
    image: pgvector/pgvector:pg17 # PostgreSQL with pgvector support
    container_name: planet_earth_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secret}
      POSTGRES_DB: ${POSTGRES_DB:-planet_earth_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5433:5432'
    healthcheck:
      test:
        ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-planet_earth_db}']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - earth_net
  redis:
    image: redis:7
    container_name: planet_earth_redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-redispassword}
    ports:
      - '${REDIS_PORT:-6379}:6379'
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redispassword}
    healthcheck:
      test: ['CMD', 'redis-cli', '-a', '${REDIS_PASSWORD:-redispassword}', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - earth_net

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: planet_earth_backend
    env_file:
      - .env
    environment:
      - SERVICE_TYPE=api
      - DATABASE_URL=postgresql+psycopg://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-secret}@postgres:5432/${POSTGRES_DB:-planet_earth_db}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redispassword}@redis:6379/0
      - LOG_LEVEL=DEBUG
    volumes:
      - .:/app # Mount code for hot-reloading in dev (use depends_on for prod)
    ports:
      - '8000:8000'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - earth_net

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: planet_earth_celery
    env_file:
      - .env
    environment:
      - SERVICE_TYPE=celery
      - DATABASE_URL=postgresql+psycopg://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-secret}@postgres:5432/${POSTGRES_DB:-planet_earth_db}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redispassword}@redis:6379/0
    volumes:
      - .:/app # Mount code for development
    depends_on:
      backend:
        condition: service_started
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - earth_net

volumes:
  postgres_data:
    driver: local

networks:
  earth_net:
    driver: bridge
